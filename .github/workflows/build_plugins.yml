name: Build Plugins
on:
    workflow_dispatch:
    push:
        branches:
            - main
            - dev

jobs:
    cross_platform:
      runs-on: ubuntu-latest

      steps:
          - uses: actions/checkout@v3
          - name: Use Python
            uses: actions/setup-python@v5
            with:
                python-version: "3.13"
          - name: Install Python dependencies
            run: pip install shiv
          - name: Build plugins
            run: cd plugins && make package.cross_platform
          - name: Upload a Build Artifact
            uses: actions/upload-artifact@v4
            with:
              name: universal
              path: plugins/release/**
    platform_dependent:
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - uses: actions/checkout@v3
            - name: Cache Cargo Deps
              id: cache-cargo-deps
              uses: actions/cache@v3
              with:
                  path: |
                      target/release
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - name: Use Python
              if: ${{ matrix.os != 'ubuntu-latest' }}
              uses: actions/setup-python@v5
              with:
                  python-version: "3.13"
            - if: ${{ matrix.os != 'ubuntu-latest' }}
              run: pip install py-make
            - name: Setup Rust environment
              uses: raftario/setup-rust-action@v1.0.0
              env:
                  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
            # Pymake doesn't support environment variables
            - if: ${{ matrix.os == 'macos-latest' }}
              run: sed -i 's/\$\{OS\}/macos/g' plugins/Makefile && sed -i 's/\$\{ZIP_COMMAND\}/zip/g' plugins/Makefile
            - if: ${{ matrix.os == 'windows-latest' }}
              run: powershell -Command "(gc plugins\Makefile) -replace '\${OS}', 'windows' | Out-File -encoding ASCII plugins\Makefile" &&
                powershell -Command "(gc plugins\Makefile) -replace '\${ZIP_COMMAND}', 'tar.exe acvf' | Out-File -encoding ASCII plugins\Makefile"

            - if: ${{ matrix.os == 'ubuntu-latest'}}
              name: Build Plugins
              run: cd plugins && OS=linux ZIP_COMMAND="zip -j" make package.platform_dependent
            - if: ${{ matrix.os == 'windows-latest'}}
              name: Build Plugins
              run: cd plugins && pymake package.platform_dependent
            - if: ${{ matrix.os == 'macos-latest'}}
              name: Build Plugins
              run: cd plugins && pymake package.platform_dependent

            - name: Upload a Build Artifact
              uses: actions/upload-artifact@v4
              with:
                name: ${{ matrix.os }}
                path: plugins/release/**