name: Build Plugins
on:
    workflow_dispatch:
    push:
        branches:
            - main
            - dev

jobs:
    cross_platform:
      runs-on: ubuntu-latest

      steps:
          - uses: actions/checkout@v3
          - name: Use Python
            uses: actions/setup-python@v5
            with:
                python-version: "3.13"
          - name: Install Python dependencies
            run: pip install shiv
          - name: Build plugins
            run: cd plugins && make package.cross_platform
          - name: Upload a Build Artifact
            uses: actions/upload-artifact@v4
            with:
              name: universal
              path: plugins/release/**
    platform_dependent:
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
              include:
              - target: x86_64-unknown-linux-gnu
                filename: linux-x86_64
              - target: i686-unknown-linux-gnu
                filename: linux-x86-32bit
              - target: x86_64_pc-windows-gnu
                filename: windows-x86_64
              - target: i686-pc-windows-msvc
                filename: windows-x86-32bit
              - target: aarch64-apple-darwin
                filename: macos-aarch64
              - target: x86_64-apple-darwin
                filename: macos-x86_64

        steps:
            - uses: actions/checkout@v3
            - name: Cache Cargo Deps
              id: cache-cargo-deps
              uses: actions/cache@v3
              with:
                  path: |
                      target/release
                  key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - name: Setup Rust environment
              uses: raftario/setup-rust-action@v1.0.0
              env:
                  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
            - name: Set Rust toolchain
              run: rustup toolchain install ${{ matrix.target }} && rustup default ${{ matrix.target }}

            - name: Build Plugins
              run: cd plugins && OS="${{ matrix.filename }}" make package.platform_dependent

            - name: Upload a Build Artifact
              uses: actions/upload-artifact@v4
              with:
                name: ${{ matrix.target }}
                path: plugins/release/**