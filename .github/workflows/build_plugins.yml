name: Build Plugins
on:
    workflow_dispatch:
    push:
        branches:
            - main
            - dev

jobs:
    cross_platform:
      runs-on: ubuntu-latest

      steps:
          - uses: actions/checkout@v3
          - name: Use Python
            uses: actions/setup-python@v5
            with:
                python-version: "3.13"
          - name: Install Python dependencies
            run: pip install shiv
          - name: Build plugins
            run: cd plugins && make package.cross_platform
          - name: Upload a Build Artifact
            uses: actions/upload-artifact@v4
            with:
              name: universal
              path: plugins/release/**
    platform_dependent:
        runs-on: ubuntu-latest

        strategy:
            fail-fast: false
            matrix:
              include:
              # 32 bit targets are disabled for now because of simd_json failures
              - target: x86_64-unknown-linux-gnu
                filename: linux-x86_64
              # - target: i686-unknown-linux-gnu
              #   filename: linux-x86-32bit
              - target: x86_64-pc-windows-gnu
                filename: windows-x86_64
              # - target: i686-pc-windows-msvc
              #   filename: windows-x86-32bit

        steps:
            - uses: actions/checkout@v3
            - name: Cache Cargo Deps
              id: cache-cargo-deps
              uses: actions/cache@v3
              with:
                  path: |
                      target/release
                  key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - name: Setup Rust environment
              uses: raftario/setup-rust-action@v1.0.0
              env:
                  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

            # Install libraries
            - run: sudo apt-get update
            - if: ${{ matrix.target == 'i686-unknown-linux-gnu' || matrix.target == 'i686-pc-windows-msvc' }}
              name: Install 32bit libs
              run: sudo apt-get install gcc-multilib
            - if: ${{ matrix.target == 'x86_64-pc-windows-gnu' || matrix.target == 'i686-pc-windows-msvc' }}
              name: Install MinGW
              run: sudo apt-get install g++-mingw-w64-x86-64 gcc-mingw-w64-x86-64
            - if: ${{ matrix.target == 'aarch64-apple-darwin' || matrix.target == 'x86_64-apple-darwin' }}
              name: Install MacOS dependencies
              run: sudo apt-get install podman &&
                cargo install cross --git https://github.com/cross-rs/cross
            - name: Set Rust toolchain
              run: rustup target add ${{ matrix.target }}

            - name: Build Plugins
              run: cd plugins && CARGO_BUILD_TARGET="${{ matrix.target }}" OS="${{ matrix.filename }}" make package.platform_dependent
            - name: Upload a Build Artifact
              uses: actions/upload-artifact@v4
              with:
                name: ${{ matrix.target }}
                path: plugins/release/**
    platform_dependent_macos:
        runs-on: macos-latest

        strategy:
            fail-fast: false
            matrix:
              include:
              - target: aarch64-apple-darwin
                filename: macos-aarch64
              - target: x86_64-apple-darwin
                filename: macos-x86_64

        steps:
            - uses: actions/checkout@v3
            - name: Cache Cargo Deps
              id: cache-cargo-deps
              uses: actions/cache@v3
              with:
                  path: |
                      target/release
                  key: ${{ matrix.target }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - name: Setup Rust environment
              uses: raftario/setup-rust-action@v1.0.0
              env:
                  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
            - name: Use Python
              uses: actions/setup-python@v5
              with:
                  python-version: "3.13"
            - name: Install Python dependencies
              run: pip install py-make && git clone https://github.com/aureliojargas/replace.git

            - name: Set Rust toolchain
              run: rustup target add ${{ matrix.target }}

            - name: Update Makefile
              run: cd replace &&
                git reset --hard ad148213e50e13f7a46a357e6e5bb451216fa501 &&
                ./replace.py --from "${OS}" --to "${{ matrix.filename }}" -i ../plugins/Makefile 

            - name: Build Plugins
              run: cd plugins && pymake package.platform_dependent
            - name: Upload a Build Artifact
              uses: actions/upload-artifact@v4
              with:
                name: ${{ matrix.target }}
                path: plugins/release/**