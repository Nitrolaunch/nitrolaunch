name: Build GUI
on:
    workflow_dispatch:
    push:
        branches:
            - main
            - dev

jobs:
    publish:
        runs-on: ${{ matrix.os }}

        strategy:
            fail-fast: false
            matrix:
                os: [ubuntu-latest, windows-latest, macos-latest]

        steps:
            - uses: actions/checkout@v3
            - name: Cache Cargo Deps
              id: cache-cargo-deps
              uses: actions/cache@v3
              with:
                  path: |
                      target/release
                  key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
            - name: Use Node.js
              uses: actions/setup-node@v3.5.1
              with:
                  cache: "npm"
                  cache-dependency-path: "gui/package.json"
                  node-version: 18
            - name: Setup Rust environment
              # You may pin to the exact commit or the version.
              # uses: raftario/setup-rust-action@f74294776374514bbcc27b4623c1b220ef9394bf
              uses: raftario/setup-rust-action@v1.0.0
              env:
                  ACTIONS_ALLOW_UNSECURE_COMMANDS: true

            - if: ${{ matrix.os == 'ubuntu-latest'}}
              name: Install Ubuntu Dependencies
              run: |
                  cd gui &&
                  npm i turbo-linux-64 @tauri-apps/cli-linux-x64-gnu && 
                  echo " \
                  deb http://gb.archive.ubuntu.com/ubuntu jammy main" | sudo tee -a /etc/apt/sources.list &&
                  cat /etc/apt/sources.list &&
                  sudo apt update &&
                  sudo apt install libwebkit2gtk-4.0-dev \
                      build-essential \
                      curl \
                      wget \
                      libssl-dev \
                      libgtk-3-dev \
                      libayatana-appindicator3-dev \
                      librsvg2-dev
            - if: ${{ matrix.os == 'macos-latest'}}
              name: Install MacOS Dependencies
              run: |
                  cd gui &&
                  npm i turbo-darwin-arm64 @tauri-apps/cli-darwin-arm64 && 
                  rustup target add aarch64-apple-darwin &&
                  rustup target add x86_64-apple-darwin
            - run: cd gui && npm i
            - if: ${{ matrix.os == 'macos-latest'}}
              name: Build App MacOS
              run: TAURI_PRIVATE_KEY=${{ secrets.TAURI_PRIVATE_KEY }} TAURI_KEY_PASSWORD=${{ secrets.TAURI_KEY_PASSWORD }} cd gui && npm run tauri build --filter=desktop -- --target universal-apple-darwin

            - if: ${{ matrix.os != 'macos-latest'}}
              name: Build App
              run: TAURI_PRIVATE_KEY=${{ secrets.TAURI_PRIVATE_KEY }} TAURI_KEY_PASSWORD=${{ secrets.TAURI_KEY_PASSWORD }} cd gui && npm run tauri build --filter=desktop

            - name: Upload a Build Artifact
              uses: actions/upload-artifact@v4
              with:
                  # Artifact name
                  name: ${{ matrix.os }}
                  # A file, directory or wildcard pattern that describes what to upload
                  if-no-files-found: ignore
                  path: |
                      target/release/bundle/appimage/*.AppImage
                      target/release/bundle/deb/*.deb
                      target/release/bundle/msi/*.msi
                      target/release/*.exe
                      target/release/bundle/macos/*.app
                      target/release/bundle/dmg/*.dmg
                      target/release/bundle/osx/*.app
                      target/universal-apple-darwin/release/bundle/macos/*.app
                      target/universal-apple-darwin/release/bundle/dmg/*.dmg